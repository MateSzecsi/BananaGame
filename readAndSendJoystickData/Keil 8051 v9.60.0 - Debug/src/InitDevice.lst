C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/18/2021 18:25:19 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\merge\S
                    -implicityStudio\v4_workspace\readAndSendJoystickData\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLE
                    -VEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\merge\SimplicityStudio\v4_workspace\
                    -readAndSendJoystickData\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//kits/common/drivers/efm8_reta
                    -rgetserial;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/shared/si8051Base;C:/SiliconLabs/Simpli
                    -cityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8BB3/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH
                    -(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PBCFG_0_enter_DefaultMode_from_RESET();
  31   1              ADC_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_2_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  37   1              // Restore the SFRPAGE
  38   1              SFRPAGE = SFRPAGE_save;
  39   1              // [Config Calls]$
  40   1      
  41   1      }
  42          
  43          //================================================================================
  44          // WDT_0_enter_DefaultMode_from_RESET
  45          //================================================================================
  46          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  47   1              // $[Watchdog Timer Init Variable Declarations]
  48   1              uint32_t i;
  49   1              bool ea;
  50   1              // [Watchdog Timer Init Variable Declarations]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/18/2021 18:25:19 PAGE 2   

  51   1      
  52   1              // $[WDTCN - Watchdog Timer Control]
  53   1              // Deprecated
  54   1              // [WDTCN - Watchdog Timer Control]$
  55   1      
  56   1              // $[WDTCN_2 - Watchdog Timer Control]
  57   1              SFRPAGE = 0x00;
  58   1      
  59   1              // Feed WDT timer before disabling (Erratum WDT_E102)
  60   1              WDTCN = 0xA5;
  61   1      
  62   1              // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  63   1              for (i = 0; i < (2 * 3062500UL) / (80000 * 3); i++) {
  64   2                      NOP();
  65   2              }
  66   1      
  67   1              // Disable WDT
  68   1              ea = IE_EA;
  69   1              IE_EA = 0;
  70   1              WDTCN = 0xDE;
  71   1              WDTCN = 0xAD;
  72   1              IE_EA = ea;
  73   1      
  74   1              // [WDTCN_2 - Watchdog Timer Control]$
  75   1      
  76   1      }
  77          
  78          //================================================================================
  79          // PORTS_0_enter_DefaultMode_from_RESET
  80          //================================================================================
  81          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  82   1              // $[P0 - Port 0 Pin Latch]
  83   1              // [P0 - Port 0 Pin Latch]$
  84   1      
  85   1              // $[P0MDOUT - Port 0 Output Mode]
  86   1              /***********************************************************************
  87   1               - P0.0 output is open-drain
  88   1               - P0.1 output is open-drain
  89   1               - P0.2 output is open-drain
  90   1               - P0.3 output is open-drain
  91   1               - P0.4 output is push-pull
  92   1               - P0.5 output is open-drain
  93   1               - P0.6 output is open-drain
  94   1               - P0.7 output is open-drain
  95   1               ***********************************************************************/
  96   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  97   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  98   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  99   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 100   1              // [P0MDOUT - Port 0 Output Mode]$
 101   1      
 102   1              // $[P0MDIN - Port 0 Input Mode]
 103   1              // [P0MDIN - Port 0 Input Mode]$
 104   1      
 105   1              // $[P0SKIP - Port 0 Skip]
 106   1              /***********************************************************************
 107   1               - P0.0 pin is skipped by the crossbar
 108   1               - P0.1 pin is skipped by the crossbar
 109   1               - P0.2 pin is skipped by the crossbar
 110   1               - P0.3 pin is skipped by the crossbar
 111   1               - P0.4 pin is not skipped by the crossbar
 112   1               - P0.5 pin is not skipped by the crossbar
 113   1               - P0.6 pin is skipped by the crossbar
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/18/2021 18:25:19 PAGE 3   

 114   1               - P0.7 pin is skipped by the crossbar
 115   1               ***********************************************************************/
 116   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 117   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
 118   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 119   1              // [P0SKIP - Port 0 Skip]$
 120   1      
 121   1              // $[P0MASK - Port 0 Mask]
 122   1              // [P0MASK - Port 0 Mask]$
 123   1      
 124   1              // $[P0MAT - Port 0 Match]
 125   1              // [P0MAT - Port 0 Match]$
 126   1      
 127   1      }
 128          
 129          //================================================================================
 130          // PORTS_1_enter_DefaultMode_from_RESET
 131          //================================================================================
 132          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 133   1              // $[P1 - Port 1 Pin Latch]
 134   1              // [P1 - Port 1 Pin Latch]$
 135   1      
 136   1              // $[P1MDOUT - Port 1 Output Mode]
 137   1              // [P1MDOUT - Port 1 Output Mode]$
 138   1      
 139   1              // $[P1MDIN - Port 1 Input Mode]
 140   1              /***********************************************************************
 141   1               - P1.0 pin is configured for digital mode
 142   1               - P1.1 pin is configured for digital mode
 143   1               - P1.2 pin is configured for digital mode
 144   1               - P1.3 pin is configured for digital mode
 145   1               - P1.4 pin is configured for digital mode
 146   1               - P1.5 pin is configured for digital mode
 147   1               - P1.6 pin is configured for digital mode
 148   1               - P1.7 pin is configured for analog mode
 149   1               ***********************************************************************/
 150   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 151   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 152   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 153   1              // [P1MDIN - Port 1 Input Mode]$
 154   1      
 155   1              // $[P1SKIP - Port 1 Skip]
 156   1              /***********************************************************************
 157   1               - P1.0 pin is skipped by the crossbar
 158   1               - P1.1 pin is skipped by the crossbar
 159   1               - P1.2 pin is skipped by the crossbar
 160   1               - P1.3 pin is skipped by the crossbar
 161   1               - P1.4 pin is skipped by the crossbar
 162   1               - P1.5 pin is skipped by the crossbar
 163   1               - P1.6 pin is skipped by the crossbar
 164   1               - P1.7 pin is skipped by the crossbar
 165   1               ***********************************************************************/
 166   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 167   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 168   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 169   1              // [P1SKIP - Port 1 Skip]$
 170   1      
 171   1              // $[P1MASK - Port 1 Mask]
 172   1              // [P1MASK - Port 1 Mask]$
 173   1      
 174   1              // $[P1MAT - Port 1 Match]
 175   1              // [P1MAT - Port 1 Match]$
 176   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/18/2021 18:25:19 PAGE 4   

 177   1      }
 178          
 179          //================================================================================
 180          // PORTS_2_enter_DefaultMode_from_RESET
 181          //================================================================================
 182          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 183   1              // $[P2 - Port 2 Pin Latch]
 184   1              // [P2 - Port 2 Pin Latch]$
 185   1      
 186   1              // $[P2MDOUT - Port 2 Output Mode]
 187   1              /***********************************************************************
 188   1               - P2.0 output is push-pull
 189   1               - P2.1 output is push-pull
 190   1               - P2.2 output is open-drain
 191   1               - P2.3 output is push-pull
 192   1               - P2.4 output is open-drain
 193   1               - P2.5 output is open-drain
 194   1               - P2.6 output is open-drain
 195   1               ***********************************************************************/
 196   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__PUSH_PULL
 197   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 198   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 199   1                              | P2MDOUT_B6__OPEN_DRAIN;
 200   1              // [P2MDOUT - Port 2 Output Mode]$
 201   1      
 202   1              // $[P2MDIN - Port 2 Input Mode]
 203   1              // [P2MDIN - Port 2 Input Mode]$
 204   1      
 205   1              // $[P2SKIP - Port 2 Skip]
 206   1              /***********************************************************************
 207   1               - P2.0 pin is not skipped by the crossbar
 208   1               - P2.1 pin is not skipped by the crossbar
 209   1               - P2.2 pin is not skipped by the crossbar
 210   1               - P2.3 pin is skipped by the crossbar
 211   1               ***********************************************************************/
 212   1              SFRPAGE = 0x20;
 213   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 214   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 215   1              // [P2SKIP - Port 2 Skip]$
 216   1      
 217   1              // $[P2MASK - Port 2 Mask]
 218   1              // [P2MASK - Port 2 Mask]$
 219   1      
 220   1              // $[P2MAT - Port 2 Match]
 221   1              // [P2MAT - Port 2 Match]$
 222   1      
 223   1      }
 224          
 225          //================================================================================
 226          // PBCFG_0_enter_DefaultMode_from_RESET
 227          //================================================================================
 228          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 229   1              // $[XBR2 - Port I/O Crossbar 2]
 230   1              /***********************************************************************
 231   1               - Weak Pullups enabled 
 232   1               - Crossbar enabled
 233   1               - UART1 I/O unavailable at Port pin
 234   1               - UART1 RTS1 unavailable at Port pin
 235   1               - UART1 CTS1 unavailable at Port pin
 236   1               ***********************************************************************/
 237   1              SFRPAGE = 0x00;
 238   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 239   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/18/2021 18:25:19 PAGE 5   

 240   1                              | XBR2_URT1CTSE__DISABLED;
 241   1              // [XBR2 - Port I/O Crossbar 2]$
 242   1      
 243   1              // $[PRTDRV - Port Drive Strength]
 244   1              // [PRTDRV - Port Drive Strength]$
 245   1      
 246   1              // $[XBR0 - Port I/O Crossbar 0]
 247   1              // [XBR0 - Port I/O Crossbar 0]$
 248   1      
 249   1              // $[XBR1 - Port I/O Crossbar 1]
 250   1              // [XBR1 - Port I/O Crossbar 1]$
 251   1      
 252   1      }
 253          
 254          //================================================================================
 255          // ADC_0_enter_DefaultMode_from_RESET
 256          //================================================================================
 257          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 258   1              // $[ADC0CN2 - ADC0 Control 2]
 259   1              /***********************************************************************
 260   1               - ADC0 conversion initiated on overflow of Timer 2
 261   1               - The ADC accumulator is over-written with the results of any conversion
 262   1               ***********************************************************************/
 263   1              ADC0CN2 = ADC0CN2_ADCM__TIMER2 | ADC0CN2_PACEN__PAC_DISABLED;
 264   1              // [ADC0CN2 - ADC0 Control 2]$
 265   1      
 266   1              // $[ADC0CN1 - ADC0 Control 1]
 267   1              // [ADC0CN1 - ADC0 Control 1]$
 268   1      
 269   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 270   1              /***********************************************************************
 271   1               - Select ADC0.13
 272   1               ***********************************************************************/
 273   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 274   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 275   1      
 276   1              // $[ADC0CF2 - ADC0 Power Control]
 277   1              /***********************************************************************
 278   1               - The ADC0 ground reference is the GND pin
 279   1               - The ADC0 voltage reference is the VDD pin
 280   1               - Power Up Delay Time = 0x03
 281   1               ***********************************************************************/
 282   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 283   1                              | (0x03 << ADC0CF2_ADPWR__SHIFT);
 284   1              // [ADC0CF2 - ADC0 Power Control]$
 285   1      
 286   1              // $[ADC0CF0 - ADC0 Configuration]
 287   1              /***********************************************************************
 288   1               - ADCCLK = SYSCLK
 289   1               - SAR Clock Divider = 0x01
 290   1               ***********************************************************************/
 291   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 292   1              // [ADC0CF0 - ADC0 Configuration]$
 293   1      
 294   1              // $[ADC0CF1 - ADC0 Configuration]
 295   1              /***********************************************************************
 296   1               - Enable low power mode
 297   1               - Conversion Tracking Time = 0x03
 298   1               ***********************************************************************/
 299   1              ADC0CF1 = ADC0CF1_ADLPM__LP_ENABLED | (0x03 << ADC0CF1_ADTK__SHIFT);
 300   1              // [ADC0CF1 - ADC0 Configuration]$
 301   1      
 302   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/18/2021 18:25:19 PAGE 6   

 303   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 304   1      
 305   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 306   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 307   1      
 308   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 309   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 310   1      
 311   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 312   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 313   1      
 314   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 315   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 316   1      
 317   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 318   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 319   1      
 320   1              // $[ADC0CN0 - ADC0 Control 0]
 321   1              /***********************************************************************
 322   1               - Enable ADC0 
 323   1               - Power down when ADC is idle 
 324   1               ***********************************************************************/
 325   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED | ADC0CN0_IPOEN__POWER_DOWN;
 326   1              // [ADC0CN0 - ADC0 Control 0]$
 327   1      
 328   1      }
 329          
 330          //================================================================================
 331          // CLOCK_0_enter_DefaultMode_from_RESET
 332          //================================================================================
 333          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 334   1              // $[HFOSC1 Setup]
 335   1              // [HFOSC1 Setup]$
 336   1      
 337   1              // $[CLKSEL - Clock Select]
 338   1              /***********************************************************************
 339   1               - Clock derived from the Internal High Frequency Oscillator 0
 340   1               - SYSCLK is equal to selected clock source divided by 1
 341   1               ***********************************************************************/
 342   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 343   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 344   1                      ;
 345   1              // [CLKSEL - Clock Select]$
 346   1      
 347   1      }
 348          
 349          //================================================================================
 350          // TIMER01_0_enter_DefaultMode_from_RESET
 351          //================================================================================
 352          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 353   1              // $[Timer Initialization]
 354   1              //Save Timer Configuration
 355   1              uint8_t TCON_save;
 356   1              TCON_save = TCON;
 357   1              //Stop Timers
 358   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 359   1      
 360   1              // [Timer Initialization]$
 361   1      
 362   1              // $[TH0 - Timer 0 High Byte]
 363   1              // [TH0 - Timer 0 High Byte]$
 364   1      
 365   1              // $[TL0 - Timer 0 Low Byte]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/18/2021 18:25:19 PAGE 7   

 366   1              // [TL0 - Timer 0 Low Byte]$
 367   1      
 368   1              // $[TH1 - Timer 1 High Byte]
 369   1              /***********************************************************************
 370   1               - Timer 1 High Byte = 0xF7
 371   1               ***********************************************************************/
 372   1              TH1 = (0xF7 << TH1_TH1__SHIFT);
 373   1              // [TH1 - Timer 1 High Byte]$
 374   1      
 375   1              // $[TL1 - Timer 1 Low Byte]
 376   1              // [TL1 - Timer 1 Low Byte]$
 377   1      
 378   1              // $[Timer Restoration]
 379   1              //Restore Timer Configuration
 380   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 381   1      
 382   1              // [Timer Restoration]$
 383   1      
 384   1      }
 385          
 386          //================================================================================
 387          // TIMER16_2_enter_DefaultMode_from_RESET
 388          //================================================================================
 389          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 390   1              // $[Timer Initialization]
 391   1              // Save Timer Configuration
 392   1              uint8_t TMR2CN0_TR2_save;
 393   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 394   1              // Stop Timer
 395   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 396   1              // [Timer Initialization]$
 397   1      
 398   1              // $[TMR2CN1 - Timer 2 Control 1]
 399   1              // [TMR2CN1 - Timer 2 Control 1]$
 400   1      
 401   1              // $[TMR2CN0 - Timer 2 Control]
 402   1              // [TMR2CN0 - Timer 2 Control]$
 403   1      
 404   1              // $[TMR2H - Timer 2 High Byte]
 405   1              /***********************************************************************
 406   1               - Timer 2 High Byte = 0xFF
 407   1               ***********************************************************************/
 408   1              TMR2H = (0xFF << TMR2H_TMR2H__SHIFT);
 409   1              // [TMR2H - Timer 2 High Byte]$
 410   1      
 411   1              // $[TMR2L - Timer 2 Low Byte]
 412   1              /***********************************************************************
 413   1               - Timer 2 Low Byte = 0x34
 414   1               ***********************************************************************/
 415   1              TMR2L = (0x34 << TMR2L_TMR2L__SHIFT);
 416   1              // [TMR2L - Timer 2 Low Byte]$
 417   1      
 418   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 419   1              /***********************************************************************
 420   1               - Timer 2 Reload High Byte = 0xFF
 421   1               ***********************************************************************/
 422   1              TMR2RLH = (0xFF << TMR2RLH_TMR2RLH__SHIFT);
 423   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 424   1      
 425   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 426   1              /***********************************************************************
 427   1               - Timer 2 Reload Low Byte = 0x9A
 428   1               ***********************************************************************/
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/18/2021 18:25:19 PAGE 8   

 429   1              TMR2RLL = (0x9A << TMR2RLL_TMR2RLL__SHIFT);
 430   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 431   1      
 432   1              // $[TMR2CN0]
 433   1              /***********************************************************************
 434   1               - Start Timer 2 running
 435   1               ***********************************************************************/
 436   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
 437   1              // [TMR2CN0]$
 438   1      
 439   1              // $[Timer Restoration]
 440   1              // Restore Timer Configuration
 441   1              TMR2CN0 |= TMR2CN0_TR2_save;
 442   1              // [Timer Restoration]$
 443   1      
 444   1      }
 445          
 446          //================================================================================
 447          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 448          //================================================================================
 449          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 450   1              // $[CKCON0 - Clock Control 0]
 451   1              // [CKCON0 - Clock Control 0]$
 452   1      
 453   1              // $[CKCON1 - Clock Control 1]
 454   1              // [CKCON1 - Clock Control 1]$
 455   1      
 456   1              // $[TMOD - Timer 0/1 Mode]
 457   1              /***********************************************************************
 458   1               - Mode 0, 13-bit Counter/Timer
 459   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 460   1               - Timer Mode
 461   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 462   1               - Timer Mode
 463   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 464   1               ***********************************************************************/
 465   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 466   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 467   1              // [TMOD - Timer 0/1 Mode]$
 468   1      
 469   1              // $[TCON - Timer 0/1 Control]
 470   1              /***********************************************************************
 471   1               - Start Timer 1 running
 472   1               ***********************************************************************/
 473   1              TCON |= TCON_TR1__RUN;
 474   1              // [TCON - Timer 0/1 Control]$
 475   1      
 476   1      }
 477          
 478          //================================================================================
 479          // UART_0_enter_DefaultMode_from_RESET
 480          //================================================================================
 481          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 482   1              // $[SCON0 - UART0 Serial Port Control]
 483   1              // [SCON0 - UART0 Serial Port Control]$
 484   1      
 485   1      }
 486          
 487          //================================================================================
 488          // INTERRUPT_0_enter_DefaultMode_from_RESET
 489          //================================================================================
 490          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 491   1              // $[EIE1 - Extended Interrupt Enable 1]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/18/2021 18:25:19 PAGE 9   

 492   1              /***********************************************************************
 493   1               - Enable interrupt requests generated by the ADINT flag
 494   1               - Disable ADC0 Window Comparison interrupt
 495   1               - Disable CP0 interrupts
 496   1               - Disable CP1 interrupts
 497   1               - Disable all Port Match interrupts
 498   1               - Disable all PCA0 interrupts
 499   1               - Disable all SMB0 interrupts
 500   1               - Disable Timer 3 interrupts
 501   1               ***********************************************************************/
 502   1              EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 503   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 504   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 505   1              // [EIE1 - Extended Interrupt Enable 1]$
 506   1      
 507   1              // $[EIE2 - Extended Interrupt Enable 2]
 508   1              // [EIE2 - Extended Interrupt Enable 2]$
 509   1      
 510   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 511   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 512   1      
 513   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 514   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 515   1      
 516   1              // $[EIP2 - Extended Interrupt Priority 2]
 517   1              // [EIP2 - Extended Interrupt Priority 2]$
 518   1      
 519   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 520   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 521   1      
 522   1              // $[IE - Interrupt Enable]
 523   1              /***********************************************************************
 524   1               - Enable each interrupt according to its individual mask setting
 525   1               - Disable external interrupt 0
 526   1               - Disable external interrupt 1
 527   1               - Disable all SPI0 interrupts
 528   1               - Disable all Timer 0 interrupt
 529   1               - Disable all Timer 1 interrupt
 530   1               - Disable Timer 2 interrupt
 531   1               - Disable UART0 interrupt
 532   1               ***********************************************************************/
 533   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 534   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 535   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 536   1              // [IE - Interrupt Enable]$
 537   1      
 538   1              // $[IP - Interrupt Priority]
 539   1              // [IP - Interrupt Priority]$
 540   1      
 541   1              // $[IPH - Interrupt Priority High]
 542   1              // [IPH - Interrupt Priority High]$
 543   1      
 544   1      }
 545          
 546          extern void UARTE_1_enter_DefaultMode_from_RESET(void) {
 547   1      
 548   1      }
 549          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    235    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/18/2021 18:25:19 PAGE 10  

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
