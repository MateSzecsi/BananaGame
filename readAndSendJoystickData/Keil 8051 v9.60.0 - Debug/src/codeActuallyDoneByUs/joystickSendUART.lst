C51 COMPILER V9.60.0.0   JOYSTICKSENDUART                                                  11/17/2021 17:14:50 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE JOYSTICKSENDUART
OBJECT MODULE PLACED IN .\src\codeActuallyDoneByUs\joystickSendUART.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\merge\S
                    -implicityStudio\v4_workspace\readAndSendJoystickData\src\codeActuallyDoneByUs\joystickSendUART.c OMF2 SMALL DEBUG OBJECT
                    -EXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\merge\Sim
                    -plicityStudio\v4_workspace\readAndSendJoystickData\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//ki
                    -ts/common/drivers/efm8_retargetserial;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/shared/si805
                    -1Base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8BB3/inc) PRINT(.\src\codeActuallyDoneByU
                    -s\joystickSendUART.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\codeActuallyDoneByUs\joystickSendUART.OBJ)

line level    source

   1          /*
   2           * Source file for sending joystick position's data through UART
   3           */
   4          
   5          /// Includes
   6                  //#include "joystickSendUART.h" //own header (it can be omitted, there are no public defines yet)
   7                  #include <SI_EFM8BB3_Register_Enums.h>  //the mcu's register definitions
   8                  #include "../../joystickPosition.h"     //contains the enum for joystick's positions
   9                  #include "stdint.h"                                             //to use uint32_t format for measuredVoltage
  10          
  11          /// Defines
  12                  #define JOYSTICK_LEFT_VOLTAGE 1973      //input voltage (in mVs), when joystick moved left
  13                  #define JOYSTICK_RIGHT_VOLTAGE 2529     //input voltage (in mVs), when joystick moved right
  14                  #define TOLERANCE_VOLTAGE 50    //+- tolerance voltage (in mVs) of joystick positions
  15          
  16          /// Utility function declarations
  17                  int isInSymmetricRange(uint32_t value, uint32_t center, uint32_t range);        //determines, if an integer valu
             -e is
  18                                                                                                                                          //in the given symmetric range
  19          
  20          /// Main functions
  21          
  22                  // Sends the joystick's position data through UART
  23                  // IN: measureVoltage: the measure voltage on the joystick in mVs
  24                  void sendJoystickPositionUART1(uint32_t measuredVoltage) {
  25   1      
  26   1                      JoystickPosition positionData = DEFAULT;        //stores the actual position of the joystick
  27   1                                                                                                              //(default is set, if not moved left or right)
  28   1      
  29   1                      if(isInSymmetricRange(measuredVoltage, JOYSTICK_LEFT_VOLTAGE,   //if the joystick is in left position
  30   1                                      TOLERANCE_VOLTAGE)){
  31   2                              positionData = LEFT;
  32   2                      }
  33   1                      else if(isInSymmetricRange(measuredVoltage, JOYSTICK_RIGHT_VOLTAGE,     //if the joystick is in right posit
             -ion
  34   1                                      TOLERANCE_VOLTAGE)){
  35   2                              positionData = RIGHT;
  36   2                      }
  37   1      
  38   1      //              SBUF1 = (uint8_t)positionData;  //send the data out at UART1 (8-N-1, 115200, TX:P2.0, RX: P2.1)
  39   1                      SBUF1 = 3;
  40   1              }
  41          
  42          /// Utility function definitions
  43          
  44                  // Determines, if an integer value is in the given symmetric range
  45                  // IN:
  46                  //              center: the center point of the symmetric range
  47                  //              range: the expansion of the symmetric range
  48                  // OUT: a C type boolean, that is value in the given range
C51 COMPILER V9.60.0.0   JOYSTICKSENDUART                                                  11/17/2021 17:14:50 PAGE 2   

  49                  int isInSymmetricRange(uint32_t value, uint32_t center, uint32_t range) {
  50   1                      return (
  51   1                              value > center - range &&
  52   1                              value < center + range
  53   1                      );
  54   1              }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    165    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
