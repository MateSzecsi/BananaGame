C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/17/2021 22:12:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\merge\S
                    -implicityStudio\v4_workspace\EFM8BB3_UART_Interrupt\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEV
                    -EL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\merge\SimplicityStudio\v4_workspace\E
                    -FM8BB3_UART_Interrupt\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//kits/common/drivers/efm8_retarg
                    -etserial;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/shared/si8051Base;C:/SiliconLabs/Simplici
                    -tyStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8BB3/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(6
                    -5) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PBCFG_0_enter_DefaultMode_from_RESET();
  31   1              CLOCK_0_enter_DefaultMode_from_RESET();
  32   1              TIMER01_0_enter_DefaultMode_from_RESET();
  33   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  34   1              UART_0_enter_DefaultMode_from_RESET();
  35   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  36   1              // Restore the SFRPAGE
  37   1              SFRPAGE = SFRPAGE_save;
  38   1              // [Config Calls]$
  39   1      
  40   1      }
  41          
  42          //================================================================================
  43          // WDT_0_enter_DefaultMode_from_RESET
  44          //================================================================================
  45          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  46   1              // $[Watchdog Timer Init Variable Declarations]
  47   1              uint32_t i;
  48   1              bool ea;
  49   1              // [Watchdog Timer Init Variable Declarations]$
  50   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/17/2021 22:12:07 PAGE 2   

  51   1              // $[WDTCN - Watchdog Timer Control]
  52   1              // Deprecated
  53   1              // [WDTCN - Watchdog Timer Control]$
  54   1      
  55   1              // $[WDTCN_2 - Watchdog Timer Control]
  56   1              SFRPAGE = 0x00;
  57   1      
  58   1              // Feed WDT timer before disabling (Erratum WDT_E102)
  59   1              WDTCN = 0xA5;
  60   1      
  61   1              // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  62   1              for (i = 0; i < (2 * 3062500UL) / (80000 * 3); i++) {
  63   2                      NOP();
  64   2              }
  65   1      
  66   1              // Disable WDT
  67   1              ea = IE_EA;
  68   1              IE_EA = 0;
  69   1              WDTCN = 0xDE;
  70   1              WDTCN = 0xAD;
  71   1              IE_EA = ea;
  72   1      
  73   1              // [WDTCN_2 - Watchdog Timer Control]$
  74   1      
  75   1      }
  76          
  77          //================================================================================
  78          // PORTS_0_enter_DefaultMode_from_RESET
  79          //================================================================================
  80          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  81   1              // $[P0 - Port 0 Pin Latch]
  82   1              // [P0 - Port 0 Pin Latch]$
  83   1      
  84   1              // $[P0MDOUT - Port 0 Output Mode]
  85   1              /***********************************************************************
  86   1               - P0.0 output is open-drain
  87   1               - P0.1 output is open-drain
  88   1               - P0.2 output is open-drain
  89   1               - P0.3 output is open-drain
  90   1               - P0.4 output is push-pull
  91   1               - P0.5 output is open-drain
  92   1               - P0.6 output is open-drain
  93   1               - P0.7 output is open-drain
  94   1               ***********************************************************************/
  95   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  96   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
  97   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
  98   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
  99   1              // [P0MDOUT - Port 0 Output Mode]$
 100   1      
 101   1              // $[P0MDIN - Port 0 Input Mode]
 102   1              // [P0MDIN - Port 0 Input Mode]$
 103   1      
 104   1              // $[P0SKIP - Port 0 Skip]
 105   1              // [P0SKIP - Port 0 Skip]$
 106   1      
 107   1              // $[P0MASK - Port 0 Mask]
 108   1              // [P0MASK - Port 0 Mask]$
 109   1      
 110   1              // $[P0MAT - Port 0 Match]
 111   1              // [P0MAT - Port 0 Match]$
 112   1      
 113   1      }
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/17/2021 22:12:07 PAGE 3   

 114          
 115          //================================================================================
 116          // PORTS_1_enter_DefaultMode_from_RESET
 117          //================================================================================
 118          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 119   1              // $[P1 - Port 1 Pin Latch]
 120   1              // [P1 - Port 1 Pin Latch]$
 121   1      
 122   1              // $[P1MDOUT - Port 1 Output Mode]
 123   1              // [P1MDOUT - Port 1 Output Mode]$
 124   1      
 125   1              // $[P1MDIN - Port 1 Input Mode]
 126   1              /***********************************************************************
 127   1               - P1.0 pin is configured for digital mode
 128   1               - P1.1 pin is configured for digital mode
 129   1               - P1.2 pin is configured for digital mode
 130   1               - P1.3 pin is configured for digital mode
 131   1               - P1.4 pin is configured for digital mode
 132   1               - P1.5 pin is configured for digital mode
 133   1               - P1.6 pin is configured for digital mode
 134   1               - P1.7 pin is configured for analog mode
 135   1               ***********************************************************************/
 136   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 137   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 138   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 139   1              // [P1MDIN - Port 1 Input Mode]$
 140   1      
 141   1              // $[P1SKIP - Port 1 Skip]
 142   1              /***********************************************************************
 143   1               - P1.0 pin is not skipped by the crossbar
 144   1               - P1.1 pin is not skipped by the crossbar
 145   1               - P1.2 pin is not skipped by the crossbar
 146   1               - P1.3 pin is not skipped by the crossbar
 147   1               - P1.4 pin is not skipped by the crossbar
 148   1               - P1.5 pin is not skipped by the crossbar
 149   1               - P1.6 pin is not skipped by the crossbar
 150   1               - P1.7 pin is skipped by the crossbar
 151   1               ***********************************************************************/
 152   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 153   1                              | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
 154   1                              | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 155   1                              | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__SKIPPED;
 156   1              // [P1SKIP - Port 1 Skip]$
 157   1      
 158   1              // $[P1MASK - Port 1 Mask]
 159   1              // [P1MASK - Port 1 Mask]$
 160   1      
 161   1              // $[P1MAT - Port 1 Match]
 162   1              // [P1MAT - Port 1 Match]$
 163   1      
 164   1      }
 165          
 166          //================================================================================
 167          // PORTS_2_enter_DefaultMode_from_RESET
 168          //================================================================================
 169          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 170   1              // $[P2 - Port 2 Pin Latch]
 171   1              // [P2 - Port 2 Pin Latch]$
 172   1      
 173   1              // $[P2MDOUT - Port 2 Output Mode]
 174   1              /***********************************************************************
 175   1               - P2.0 output is push-pull
 176   1               - P2.1 output is open-drain
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/17/2021 22:12:07 PAGE 4   

 177   1               - P2.2 output is open-drain
 178   1               - P2.3 output is push-pull
 179   1               - P2.4 output is open-drain
 180   1               - P2.5 output is open-drain
 181   1               - P2.6 output is open-drain
 182   1               ***********************************************************************/
 183   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN
 184   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 185   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 186   1                              | P2MDOUT_B6__OPEN_DRAIN;
 187   1              // [P2MDOUT - Port 2 Output Mode]$
 188   1      
 189   1              // $[P2MDIN - Port 2 Input Mode]
 190   1              // [P2MDIN - Port 2 Input Mode]$
 191   1      
 192   1              // $[P2SKIP - Port 2 Skip]
 193   1              /***********************************************************************
 194   1               - P2.0 pin is skipped by the crossbar
 195   1               - P2.1 pin is not skipped by the crossbar
 196   1               - P2.2 pin is not skipped by the crossbar
 197   1               - P2.3 pin is skipped by the crossbar
 198   1               ***********************************************************************/
 199   1              SFRPAGE = 0x20;
 200   1              P2SKIP = P2SKIP_B0__SKIPPED | P2SKIP_B1__NOT_SKIPPED
 201   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 202   1              // [P2SKIP - Port 2 Skip]$
 203   1      
 204   1              // $[P2MASK - Port 2 Mask]
 205   1              // [P2MASK - Port 2 Mask]$
 206   1      
 207   1              // $[P2MAT - Port 2 Match]
 208   1              // [P2MAT - Port 2 Match]$
 209   1      
 210   1      }
 211          
 212          //================================================================================
 213          // PBCFG_0_enter_DefaultMode_from_RESET
 214          //================================================================================
 215          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 216   1              // $[XBR2 - Port I/O Crossbar 2]
 217   1              /***********************************************************************
 218   1               - Weak Pullups enabled 
 219   1               - Crossbar enabled
 220   1               - UART1 I/O unavailable at Port pin
 221   1               - UART1 RTS1 unavailable at Port pin
 222   1               - UART1 CTS1 unavailable at Port pin
 223   1               ***********************************************************************/
 224   1              SFRPAGE = 0x00;
 225   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 226   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 227   1                              | XBR2_URT1CTSE__DISABLED;
 228   1              // [XBR2 - Port I/O Crossbar 2]$
 229   1      
 230   1              // $[PRTDRV - Port Drive Strength]
 231   1              // [PRTDRV - Port Drive Strength]$
 232   1      
 233   1              // $[XBR0 - Port I/O Crossbar 0]
 234   1              /***********************************************************************
 235   1               - UART0 TX0, RX0 routed to Port pins P0.4 and P0.5
 236   1               - SPI I/O unavailable at Port pins
 237   1               - SMBus 0 I/O unavailable at Port pins
 238   1               - CP0 unavailable at Port pin
 239   1               - Asynchronous CP0 unavailable at Port pin
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/17/2021 22:12:07 PAGE 5   

 240   1               - CP1 unavailable at Port pin
 241   1               - Asynchronous CP1 unavailable at Port pin
 242   1               - SYSCLK unavailable at Port pin
 243   1               ***********************************************************************/
 244   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 245   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 246   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 247   1              // [XBR0 - Port I/O Crossbar 0]$
 248   1      
 249   1              // $[XBR1 - Port I/O Crossbar 1]
 250   1              // [XBR1 - Port I/O Crossbar 1]$
 251   1      
 252   1      }
 253          
 254          //================================================================================
 255          // CLOCK_0_enter_DefaultMode_from_RESET
 256          //================================================================================
 257          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 258   1              // $[HFOSC1 Setup]
 259   1              // [HFOSC1 Setup]$
 260   1      
 261   1              // $[CLKSEL - Clock Select]
 262   1              /***********************************************************************
 263   1               - Clock derived from the Internal High Frequency Oscillator 0
 264   1               - SYSCLK is equal to selected clock source divided by 1
 265   1               ***********************************************************************/
 266   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 267   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 268   1                      ;
 269   1              // [CLKSEL - Clock Select]$
 270   1      
 271   1      }
 272          
 273          //================================================================================
 274          // TIMER01_0_enter_DefaultMode_from_RESET
 275          //================================================================================
 276          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 277   1              // $[Timer Initialization]
 278   1              //Save Timer Configuration
 279   1              uint8_t TCON_save;
 280   1              TCON_save = TCON;
 281   1              //Stop Timers
 282   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 283   1      
 284   1              // [Timer Initialization]$
 285   1      
 286   1              // $[TH0 - Timer 0 High Byte]
 287   1              // [TH0 - Timer 0 High Byte]$
 288   1      
 289   1              // $[TL0 - Timer 0 Low Byte]
 290   1              // [TL0 - Timer 0 Low Byte]$
 291   1      
 292   1              // $[TH1 - Timer 1 High Byte]
 293   1              /***********************************************************************
 294   1               - Timer 1 High Byte = 0x96
 295   1               ***********************************************************************/
 296   1              TH1 = (0x96 << TH1_TH1__SHIFT);
 297   1              // [TH1 - Timer 1 High Byte]$
 298   1      
 299   1              // $[TL1 - Timer 1 Low Byte]
 300   1              // [TL1 - Timer 1 Low Byte]$
 301   1      
 302   1              // $[Timer Restoration]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/17/2021 22:12:07 PAGE 6   

 303   1              //Restore Timer Configuration
 304   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 305   1      
 306   1              // [Timer Restoration]$
 307   1      
 308   1      }
 309          
 310          //================================================================================
 311          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 312          //================================================================================
 313          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 314   1              // $[CKCON0 - Clock Control 0]
 315   1              /***********************************************************************
 316   1               - System clock divided by 12
 317   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 318   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 319   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 320   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 321   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 322   1               - Timer 1 uses the system clock
 323   1               ***********************************************************************/
 324   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 325   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 326   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 327   1                              | CKCON0_T1M__SYSCLK;
 328   1              // [CKCON0 - Clock Control 0]$
 329   1      
 330   1              // $[CKCON1 - Clock Control 1]
 331   1              // [CKCON1 - Clock Control 1]$
 332   1      
 333   1              // $[TMOD - Timer 0/1 Mode]
 334   1              /***********************************************************************
 335   1               - Mode 0, 13-bit Counter/Timer
 336   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 337   1               - Timer Mode
 338   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 339   1               - Timer Mode
 340   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 341   1               ***********************************************************************/
 342   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 343   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 344   1              // [TMOD - Timer 0/1 Mode]$
 345   1      
 346   1              // $[TCON - Timer 0/1 Control]
 347   1              /***********************************************************************
 348   1               - Start Timer 1 running
 349   1               ***********************************************************************/
 350   1              TCON |= TCON_TR1__RUN;
 351   1              // [TCON - Timer 0/1 Control]$
 352   1      
 353   1      }
 354          
 355          //================================================================================
 356          // UART_0_enter_DefaultMode_from_RESET
 357          //================================================================================
 358          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 359   1              // $[SCON0 - UART0 Serial Port Control]
 360   1              /***********************************************************************
 361   1               - UART0 reception enabled
 362   1               ***********************************************************************/
 363   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 364   1              // [SCON0 - UART0 Serial Port Control]$
 365   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/17/2021 22:12:07 PAGE 7   

 366   1      }
 367          
 368          //================================================================================
 369          // INTERRUPT_0_enter_DefaultMode_from_RESET
 370          //================================================================================
 371          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 372   1              // $[EIE1 - Extended Interrupt Enable 1]
 373   1              // [EIE1 - Extended Interrupt Enable 1]$
 374   1      
 375   1              // $[EIE2 - Extended Interrupt Enable 2]
 376   1              // [EIE2 - Extended Interrupt Enable 2]$
 377   1      
 378   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 379   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 380   1      
 381   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 382   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 383   1      
 384   1              // $[EIP2 - Extended Interrupt Priority 2]
 385   1              // [EIP2 - Extended Interrupt Priority 2]$
 386   1      
 387   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 388   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 389   1      
 390   1              // $[IE - Interrupt Enable]
 391   1              /***********************************************************************
 392   1               - Disable all interrupt sources
 393   1               - Disable external interrupt 0
 394   1               - Disable external interrupt 1
 395   1               - Disable all SPI0 interrupts
 396   1               - Disable all Timer 0 interrupt
 397   1               - Disable all Timer 1 interrupt
 398   1               - Disable Timer 2 interrupt
 399   1               - Enable UART0 interrupt
 400   1               ***********************************************************************/
 401   1              IE = IE_EA__DISABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 402   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 403   1                              | IE_ET2__DISABLED | IE_ES0__ENABLED;
 404   1              // [IE - Interrupt Enable]$
 405   1      
 406   1              // $[IP - Interrupt Priority]
 407   1              // [IP - Interrupt Priority]$
 408   1      
 409   1              // $[IPH - Interrupt Priority High]
 410   1              // [IPH - Interrupt Priority High]$
 411   1      
 412   1      }
 413          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    190    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/17/2021 22:12:07 PAGE 8   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
