C51 COMPILER V9.60.0.0   JOYSTICKSENDUART                                                  11/16/2021 20:35:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE JOYSTICKSENDUART
OBJECT MODULE PLACED IN .\codeActuallyDoneByUs\joystickSendUART.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\merge\S
                    -implicityStudio\v4_workspace\EFM8BB3_ADC_ExternalInput\codeActuallyDoneByUs\joystickSendUART.c OMF2 SMALL DEBUG OBJECTEX
                    -TEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\merge\Simpl
                    -icityStudio\v4_workspace\EFM8BB3_ADC_ExternalInput\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//ki
                    -ts/common/drivers/efm8_retargetserial;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/shared/si805
                    -1Base;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8BB3/inc) PRINT(.\codeActuallyDoneByUs\jo
                    -ystickSendUART.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\codeActuallyDoneByUs\joystickSendUART.OBJ)

line level    source

   1          
   2          /*
   3           * Source file for sending joystick position's data through UART
   4           */
   5          
   6          // Includes
   7          #include "joystickSendUART.h"
   8          #include <SI_EFM8BB3_Register_Enums.h>
   9          
  10          // Defines
  11          #define JOYSTICK_LEFT_VOLTAGE 1973
  12          #define JOYSTICK_RIGHT_VOLTAGE 2529
  13          #define TOLERANCE_VOLTAGE 50
  14          
  15          // Enums
  16          
  17          typedef enum { DEFAULT, LEFT, RIGHT }Position;
  18          
  19          // Sends the joystick's position data through UART
  20          void sendJoystickPosUART(unsigned measuredVoltage) {
  21   1              Position positionData = DEFAULT;
  22   1              if(measuredVoltage < JOYSTICK_LEFT_VOLTAGE + TOLERANCE_VOLTAGE &&
  23   1                              measuredVoltage > JOYSTICK_LEFT_VOLTAGE - TOLERANCE_VOLTAGE){
  24   2                      positionData = LEFT;
  25   2              }
  26   1              else if(measuredVoltage < JOYSTICK_RIGHT_VOLTAGE + TOLERANCE_VOLTAGE &&
  27   1                              measuredVoltage > JOYSTICK_RIGHT_VOLTAGE - TOLERANCE_VOLTAGE){
  28   2                      positionData = RIGHT;
  29   2              }
  30   1      
  31   1              SBUF1 = positionData;
  32   1      
  33   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     44    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
