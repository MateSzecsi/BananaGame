C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 19:54:22 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\merge\S
                    -implicityStudio\v4_workspace\EFM8BB3_ADC_ExternalInput\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNING
                    -LEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\merge\SimplicityStudio\v4_workspac
                    -e\EFM8BB3_ADC_ExternalInput\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//kits/common/drivers/efm8_
                    -retargetserial;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/shared/si8051Base;C:/SiliconLabs/Si
                    -mplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8BB3/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELE
                    -NGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              WDT_0_enter_DefaultMode_from_RESET();
  27   1              PORTS_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_1_enter_DefaultMode_from_RESET();
  29   1              PORTS_2_enter_DefaultMode_from_RESET();
  30   1              PBCFG_0_enter_DefaultMode_from_RESET();
  31   1              ADC_0_enter_DefaultMode_from_RESET();
  32   1              CLOCK_0_enter_DefaultMode_from_RESET();
  33   1              TIMER01_0_enter_DefaultMode_from_RESET();
  34   1              TIMER16_2_enter_DefaultMode_from_RESET();
  35   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  36   1              UART_0_enter_DefaultMode_from_RESET();
  37   1              UARTE_1_enter_DefaultMode_from_RESET();
  38   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  39   1              // Restore the SFRPAGE
  40   1              SFRPAGE = SFRPAGE_save;
  41   1              // [Config Calls]$
  42   1      
  43   1      }
  44          
  45          //================================================================================
  46          // WDT_0_enter_DefaultMode_from_RESET
  47          //================================================================================
  48          extern void WDT_0_enter_DefaultMode_from_RESET(void) {
  49   1              // $[Watchdog Timer Init Variable Declarations]
  50   1              uint32_t i;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 19:54:22 PAGE 2   

  51   1              bool ea;
  52   1              // [Watchdog Timer Init Variable Declarations]$
  53   1      
  54   1              // $[WDTCN - Watchdog Timer Control]
  55   1              // Deprecated
  56   1              // [WDTCN - Watchdog Timer Control]$
  57   1      
  58   1              // $[WDTCN_2 - Watchdog Timer Control]
  59   1              SFRPAGE = 0x00;
  60   1      
  61   1              // Feed WDT timer before disabling (Erratum WDT_E102)
  62   1              WDTCN = 0xA5;
  63   1      
  64   1              // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  65   1              for (i = 0; i < (2 * 3062500UL) / (80000 * 3); i++) {
  66   2                      NOP();
  67   2              }
  68   1      
  69   1              // Disable WDT
  70   1              ea = IE_EA;
  71   1              IE_EA = 0;
  72   1              WDTCN = 0xDE;
  73   1              WDTCN = 0xAD;
  74   1              IE_EA = ea;
  75   1      
  76   1              // [WDTCN_2 - Watchdog Timer Control]$
  77   1      
  78   1      }
  79          
  80          //================================================================================
  81          // PORTS_0_enter_DefaultMode_from_RESET
  82          //================================================================================
  83          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
  84   1              // $[P0 - Port 0 Pin Latch]
  85   1              // [P0 - Port 0 Pin Latch]$
  86   1      
  87   1              // $[P0MDOUT - Port 0 Output Mode]
  88   1              /***********************************************************************
  89   1               - P0.0 output is open-drain
  90   1               - P0.1 output is open-drain
  91   1               - P0.2 output is open-drain
  92   1               - P0.3 output is open-drain
  93   1               - P0.4 output is push-pull
  94   1               - P0.5 output is open-drain
  95   1               - P0.6 output is open-drain
  96   1               - P0.7 output is open-drain
  97   1               ***********************************************************************/
  98   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  99   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 100   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
 101   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 102   1              // [P0MDOUT - Port 0 Output Mode]$
 103   1      
 104   1              // $[P0MDIN - Port 0 Input Mode]
 105   1              // [P0MDIN - Port 0 Input Mode]$
 106   1      
 107   1              // $[P0SKIP - Port 0 Skip]
 108   1              /***********************************************************************
 109   1               - P0.0 pin is skipped by the crossbar
 110   1               - P0.1 pin is skipped by the crossbar
 111   1               - P0.2 pin is skipped by the crossbar
 112   1               - P0.3 pin is skipped by the crossbar
 113   1               - P0.4 pin is not skipped by the crossbar
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 19:54:22 PAGE 3   

 114   1               - P0.5 pin is not skipped by the crossbar
 115   1               - P0.6 pin is skipped by the crossbar
 116   1               - P0.7 pin is skipped by the crossbar
 117   1               ***********************************************************************/
 118   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 119   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
 120   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 121   1              // [P0SKIP - Port 0 Skip]$
 122   1      
 123   1              // $[P0MASK - Port 0 Mask]
 124   1              // [P0MASK - Port 0 Mask]$
 125   1      
 126   1              // $[P0MAT - Port 0 Match]
 127   1              // [P0MAT - Port 0 Match]$
 128   1      
 129   1      }
 130          
 131          //================================================================================
 132          // PORTS_1_enter_DefaultMode_from_RESET
 133          //================================================================================
 134          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 135   1              // $[P1 - Port 1 Pin Latch]
 136   1              // [P1 - Port 1 Pin Latch]$
 137   1      
 138   1              // $[P1MDOUT - Port 1 Output Mode]
 139   1              // [P1MDOUT - Port 1 Output Mode]$
 140   1      
 141   1              // $[P1MDIN - Port 1 Input Mode]
 142   1              /***********************************************************************
 143   1               - P1.0 pin is configured for digital mode
 144   1               - P1.1 pin is configured for digital mode
 145   1               - P1.2 pin is configured for digital mode
 146   1               - P1.3 pin is configured for digital mode
 147   1               - P1.4 pin is configured for digital mode
 148   1               - P1.5 pin is configured for digital mode
 149   1               - P1.6 pin is configured for digital mode
 150   1               - P1.7 pin is configured for analog mode
 151   1               ***********************************************************************/
 152   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 153   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 154   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
 155   1              // [P1MDIN - Port 1 Input Mode]$
 156   1      
 157   1              // $[P1SKIP - Port 1 Skip]
 158   1              /***********************************************************************
 159   1               - P1.0 pin is skipped by the crossbar
 160   1               - P1.1 pin is skipped by the crossbar
 161   1               - P1.2 pin is skipped by the crossbar
 162   1               - P1.3 pin is skipped by the crossbar
 163   1               - P1.4 pin is skipped by the crossbar
 164   1               - P1.5 pin is skipped by the crossbar
 165   1               - P1.6 pin is skipped by the crossbar
 166   1               - P1.7 pin is skipped by the crossbar
 167   1               ***********************************************************************/
 168   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 169   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 170   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 171   1              // [P1SKIP - Port 1 Skip]$
 172   1      
 173   1              // $[P1MASK - Port 1 Mask]
 174   1              // [P1MASK - Port 1 Mask]$
 175   1      
 176   1              // $[P1MAT - Port 1 Match]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 19:54:22 PAGE 4   

 177   1              // [P1MAT - Port 1 Match]$
 178   1      
 179   1      }
 180          
 181          //================================================================================
 182          // PORTS_2_enter_DefaultMode_from_RESET
 183          //================================================================================
 184          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 185   1              // $[P2 - Port 2 Pin Latch]
 186   1              // [P2 - Port 2 Pin Latch]$
 187   1      
 188   1              // $[P2MDOUT - Port 2 Output Mode]
 189   1              /***********************************************************************
 190   1               - P2.0 output is push-pull
 191   1               - P2.1 output is open-drain
 192   1               - P2.2 output is open-drain
 193   1               - P2.3 output is push-pull
 194   1               - P2.4 output is open-drain
 195   1               - P2.5 output is open-drain
 196   1               - P2.6 output is open-drain
 197   1               ***********************************************************************/
 198   1              P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN
 199   1                              | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL
 200   1                              | P2MDOUT_B4__OPEN_DRAIN | P2MDOUT_B5__OPEN_DRAIN
 201   1                              | P2MDOUT_B6__OPEN_DRAIN;
 202   1              // [P2MDOUT - Port 2 Output Mode]$
 203   1      
 204   1              // $[P2MDIN - Port 2 Input Mode]
 205   1              // [P2MDIN - Port 2 Input Mode]$
 206   1      
 207   1              // $[P2SKIP - Port 2 Skip]
 208   1              /***********************************************************************
 209   1               - P2.0 pin is not skipped by the crossbar
 210   1               - P2.1 pin is not skipped by the crossbar
 211   1               - P2.2 pin is not skipped by the crossbar
 212   1               - P2.3 pin is skipped by the crossbar
 213   1               ***********************************************************************/
 214   1              SFRPAGE = 0x20;
 215   1              P2SKIP = P2SKIP_B0__NOT_SKIPPED | P2SKIP_B1__NOT_SKIPPED
 216   1                              | P2SKIP_B2__NOT_SKIPPED | P2SKIP_B3__SKIPPED;
 217   1              // [P2SKIP - Port 2 Skip]$
 218   1      
 219   1              // $[P2MASK - Port 2 Mask]
 220   1              // [P2MASK - Port 2 Mask]$
 221   1      
 222   1              // $[P2MAT - Port 2 Match]
 223   1              // [P2MAT - Port 2 Match]$
 224   1      
 225   1      }
 226          
 227          //================================================================================
 228          // PBCFG_0_enter_DefaultMode_from_RESET
 229          //================================================================================
 230          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 231   1              // $[XBR2 - Port I/O Crossbar 2]
 232   1              /***********************************************************************
 233   1               - Weak Pullups enabled 
 234   1               - Crossbar enabled
 235   1               - UART1 TX1 RX1 routed to Port pins
 236   1               - UART1 RTS1 unavailable at Port pin
 237   1               - UART1 CTS1 unavailable at Port pin
 238   1               ***********************************************************************/
 239   1              SFRPAGE = 0x00;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 19:54:22 PAGE 5   

 240   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 241   1                              | XBR2_URT1E__ENABLED | XBR2_URT1RTSE__DISABLED
 242   1                              | XBR2_URT1CTSE__DISABLED;
 243   1              // [XBR2 - Port I/O Crossbar 2]$
 244   1      
 245   1              // $[PRTDRV - Port Drive Strength]
 246   1              // [PRTDRV - Port Drive Strength]$
 247   1      
 248   1              // $[XBR0 - Port I/O Crossbar 0]
 249   1              /***********************************************************************
 250   1               - UART0 TX0, RX0 routed to Port pins P0.4 and P0.5
 251   1               - SPI I/O unavailable at Port pins
 252   1               - SMBus 0 I/O unavailable at Port pins
 253   1               - CP0 unavailable at Port pin
 254   1               - Asynchronous CP0 unavailable at Port pin
 255   1               - CP1 unavailable at Port pin
 256   1               - Asynchronous CP1 unavailable at Port pin
 257   1               - SYSCLK unavailable at Port pin
 258   1               ***********************************************************************/
 259   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 260   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 261   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 262   1              // [XBR0 - Port I/O Crossbar 0]$
 263   1      
 264   1              // $[XBR1 - Port I/O Crossbar 1]
 265   1              // [XBR1 - Port I/O Crossbar 1]$
 266   1      
 267   1      }
 268          
 269          //================================================================================
 270          // ADC_0_enter_DefaultMode_from_RESET
 271          //================================================================================
 272          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 273   1              // $[ADC0CN2 - ADC0 Control 2]
 274   1              /***********************************************************************
 275   1               - ADC0 conversion initiated on overflow of Timer 2
 276   1               - The ADC accumulator is over-written with the results of any conversion
 277   1               ***********************************************************************/
 278   1              ADC0CN2 = ADC0CN2_ADCM__TIMER2 | ADC0CN2_PACEN__PAC_DISABLED;
 279   1              // [ADC0CN2 - ADC0 Control 2]$
 280   1      
 281   1              // $[ADC0CN1 - ADC0 Control 1]
 282   1              // [ADC0CN1 - ADC0 Control 1]$
 283   1      
 284   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 285   1              /***********************************************************************
 286   1               - Select ADC0.13
 287   1               ***********************************************************************/
 288   1              ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 289   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 290   1      
 291   1              // $[ADC0CF2 - ADC0 Power Control]
 292   1              /***********************************************************************
 293   1               - The ADC0 ground reference is the GND pin
 294   1               - The ADC0 voltage reference is the VDD pin
 295   1               - Power Up Delay Time = 0x03
 296   1               ***********************************************************************/
 297   1              ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VDD_PIN
 298   1                              | (0x03 << ADC0CF2_ADPWR__SHIFT);
 299   1              // [ADC0CF2 - ADC0 Power Control]$
 300   1      
 301   1              // $[ADC0CF0 - ADC0 Configuration]
 302   1              /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 19:54:22 PAGE 6   

 303   1               - ADCCLK = SYSCLK
 304   1               - SAR Clock Divider = 0x01
 305   1               ***********************************************************************/
 306   1              ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 307   1              // [ADC0CF0 - ADC0 Configuration]$
 308   1      
 309   1              // $[ADC0CF1 - ADC0 Configuration]
 310   1              /***********************************************************************
 311   1               - Enable low power mode
 312   1               - Conversion Tracking Time = 0x03
 313   1               ***********************************************************************/
 314   1              ADC0CF1 = ADC0CF1_ADLPM__LP_ENABLED | (0x03 << ADC0CF1_ADTK__SHIFT);
 315   1              // [ADC0CF1 - ADC0 Configuration]$
 316   1      
 317   1              // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 318   1              // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 319   1      
 320   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 321   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 322   1      
 323   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 324   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 325   1      
 326   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 327   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 328   1      
 329   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 330   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 331   1      
 332   1              // $[ADC0ASCF - ADC0 Autoscan Configuration]
 333   1              // [ADC0ASCF - ADC0 Autoscan Configuration]$
 334   1      
 335   1              // $[ADC0CN0 - ADC0 Control 0]
 336   1              /***********************************************************************
 337   1               - Enable ADC0 
 338   1               - Power down when ADC is idle 
 339   1               ***********************************************************************/
 340   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED | ADC0CN0_IPOEN__POWER_DOWN;
 341   1              // [ADC0CN0 - ADC0 Control 0]$
 342   1      
 343   1      }
 344          
 345          //================================================================================
 346          // CLOCK_0_enter_DefaultMode_from_RESET
 347          //================================================================================
 348          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 349   1              // $[HFOSC1 Setup]
 350   1              // [HFOSC1 Setup]$
 351   1      
 352   1              // $[CLKSEL - Clock Select]
 353   1              /***********************************************************************
 354   1               - Clock derived from the Internal High Frequency Oscillator 0
 355   1               - SYSCLK is equal to selected clock source divided by 1
 356   1               ***********************************************************************/
 357   1              CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 358   1              while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 359   1                      ;
 360   1              // [CLKSEL - Clock Select]$
 361   1      
 362   1      }
 363          
 364          //================================================================================
 365          // TIMER01_0_enter_DefaultMode_from_RESET
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 19:54:22 PAGE 7   

 366          //================================================================================
 367          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 368   1              // $[Timer Initialization]
 369   1              //Save Timer Configuration
 370   1              uint8_t TCON_save;
 371   1              TCON_save = TCON;
 372   1              //Stop Timers
 373   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 374   1      
 375   1              // [Timer Initialization]$
 376   1      
 377   1              // $[TH0 - Timer 0 High Byte]
 378   1              // [TH0 - Timer 0 High Byte]$
 379   1      
 380   1              // $[TL0 - Timer 0 Low Byte]
 381   1              // [TL0 - Timer 0 Low Byte]$
 382   1      
 383   1              // $[TH1 - Timer 1 High Byte]
 384   1              /***********************************************************************
 385   1               - Timer 1 High Byte = 0xF7
 386   1               ***********************************************************************/
 387   1              TH1 = (0xF7 << TH1_TH1__SHIFT);
 388   1              // [TH1 - Timer 1 High Byte]$
 389   1      
 390   1              // $[TL1 - Timer 1 Low Byte]
 391   1              // [TL1 - Timer 1 Low Byte]$
 392   1      
 393   1              // $[Timer Restoration]
 394   1              //Restore Timer Configuration
 395   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 396   1      
 397   1              // [Timer Restoration]$
 398   1      
 399   1      }
 400          
 401          //================================================================================
 402          // TIMER16_2_enter_DefaultMode_from_RESET
 403          //================================================================================
 404          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 405   1              // $[Timer Initialization]
 406   1              // Save Timer Configuration
 407   1              uint8_t TMR2CN0_TR2_save;
 408   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 409   1              // Stop Timer
 410   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 411   1              // [Timer Initialization]$
 412   1      
 413   1              // $[TMR2CN1 - Timer 2 Control 1]
 414   1              // [TMR2CN1 - Timer 2 Control 1]$
 415   1      
 416   1              // $[TMR2CN0 - Timer 2 Control]
 417   1              // [TMR2CN0 - Timer 2 Control]$
 418   1      
 419   1              // $[TMR2H - Timer 2 High Byte]
 420   1              /***********************************************************************
 421   1               - Timer 2 High Byte = 0xFF
 422   1               ***********************************************************************/
 423   1              TMR2H = (0xFF << TMR2H_TMR2H__SHIFT);
 424   1              // [TMR2H - Timer 2 High Byte]$
 425   1      
 426   1              // $[TMR2L - Timer 2 Low Byte]
 427   1              /***********************************************************************
 428   1               - Timer 2 Low Byte = 0x34
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 19:54:22 PAGE 8   

 429   1               ***********************************************************************/
 430   1              TMR2L = (0x34 << TMR2L_TMR2L__SHIFT);
 431   1              // [TMR2L - Timer 2 Low Byte]$
 432   1      
 433   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 434   1              /***********************************************************************
 435   1               - Timer 2 Reload High Byte = 0xFF
 436   1               ***********************************************************************/
 437   1              TMR2RLH = (0xFF << TMR2RLH_TMR2RLH__SHIFT);
 438   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 439   1      
 440   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 441   1              /***********************************************************************
 442   1               - Timer 2 Reload Low Byte = 0x34
 443   1               ***********************************************************************/
 444   1              TMR2RLL = (0x34 << TMR2RLL_TMR2RLL__SHIFT);
 445   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 446   1      
 447   1              // $[TMR2CN0]
 448   1              /***********************************************************************
 449   1               - Start Timer 2 running
 450   1               ***********************************************************************/
 451   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
 452   1              // [TMR2CN0]$
 453   1      
 454   1              // $[Timer Restoration]
 455   1              // Restore Timer Configuration
 456   1              TMR2CN0 |= TMR2CN0_TR2_save;
 457   1              // [Timer Restoration]$
 458   1      
 459   1      }
 460          
 461          //================================================================================
 462          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 463          //================================================================================
 464          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 465   1              // $[CKCON0 - Clock Control 0]
 466   1              // [CKCON0 - Clock Control 0]$
 467   1      
 468   1              // $[CKCON1 - Clock Control 1]
 469   1              // [CKCON1 - Clock Control 1]$
 470   1      
 471   1              // $[TMOD - Timer 0/1 Mode]
 472   1              /***********************************************************************
 473   1               - Mode 0, 13-bit Counter/Timer
 474   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 475   1               - Timer Mode
 476   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 477   1               - Timer Mode
 478   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 479   1               ***********************************************************************/
 480   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 481   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 482   1              // [TMOD - Timer 0/1 Mode]$
 483   1      
 484   1              // $[TCON - Timer 0/1 Control]
 485   1              /***********************************************************************
 486   1               - Start Timer 1 running
 487   1               ***********************************************************************/
 488   1              TCON |= TCON_TR1__RUN;
 489   1              // [TCON - Timer 0/1 Control]$
 490   1      
 491   1      }
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 19:54:22 PAGE 9   

 492          
 493          //================================================================================
 494          // UART_0_enter_DefaultMode_from_RESET
 495          //================================================================================
 496          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 497   1              // $[SCON0 - UART0 Serial Port Control]
 498   1              // [SCON0 - UART0 Serial Port Control]$
 499   1      
 500   1      }
 501          
 502          //================================================================================
 503          // INTERRUPT_0_enter_DefaultMode_from_RESET
 504          //================================================================================
 505          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 506   1              // $[EIE1 - Extended Interrupt Enable 1]
 507   1              /***********************************************************************
 508   1               - Enable interrupt requests generated by the ADINT flag
 509   1               - Disable ADC0 Window Comparison interrupt
 510   1               - Disable CP0 interrupts
 511   1               - Disable CP1 interrupts
 512   1               - Disable all Port Match interrupts
 513   1               - Disable all PCA0 interrupts
 514   1               - Disable all SMB0 interrupts
 515   1               - Disable Timer 3 interrupts
 516   1               ***********************************************************************/
 517   1              SFRPAGE = 0x00;
 518   1              EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 519   1                              | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 520   1                              | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 521   1              // [EIE1 - Extended Interrupt Enable 1]$
 522   1      
 523   1              // $[EIE2 - Extended Interrupt Enable 2]
 524   1              // [EIE2 - Extended Interrupt Enable 2]$
 525   1      
 526   1              // $[EIP1H - Extended Interrupt Priority 1 High]
 527   1              // [EIP1H - Extended Interrupt Priority 1 High]$
 528   1      
 529   1              // $[EIP1 - Extended Interrupt Priority 1 Low]
 530   1              // [EIP1 - Extended Interrupt Priority 1 Low]$
 531   1      
 532   1              // $[EIP2 - Extended Interrupt Priority 2]
 533   1              // [EIP2 - Extended Interrupt Priority 2]$
 534   1      
 535   1              // $[EIP2H - Extended Interrupt Priority 2 High]
 536   1              // [EIP2H - Extended Interrupt Priority 2 High]$
 537   1      
 538   1              // $[IE - Interrupt Enable]
 539   1              /***********************************************************************
 540   1               - Enable each interrupt according to its individual mask setting
 541   1               - Disable external interrupt 0
 542   1               - Disable external interrupt 1
 543   1               - Disable all SPI0 interrupts
 544   1               - Disable all Timer 0 interrupt
 545   1               - Disable all Timer 1 interrupt
 546   1               - Disable Timer 2 interrupt
 547   1               - Disable UART0 interrupt
 548   1               ***********************************************************************/
 549   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 550   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 551   1                              | IE_ET2__DISABLED | IE_ES0__DISABLED;
 552   1              // [IE - Interrupt Enable]$
 553   1      
 554   1              // $[IP - Interrupt Priority]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 19:54:22 PAGE 10  

 555   1              // [IP - Interrupt Priority]$
 556   1      
 557   1              // $[IPH - Interrupt Priority High]
 558   1              // [IPH - Interrupt Priority High]$
 559   1      
 560   1      }
 561          
 562          extern void UARTE_1_enter_DefaultMode_from_RESET(void) {
 563   1              // $[SBCON1 - UART1 Baud Rate Generator Control]
 564   1              /***********************************************************************
 565   1               - Enable the baud rate generator
 566   1               - Prescaler = 1
 567   1               ***********************************************************************/
 568   1              SFRPAGE = 0x20;
 569   1              SBCON1 = SBCON1_BREN__ENABLED | SBCON1_BPS__DIV_BY_1;
 570   1              // [SBCON1 - UART1 Baud Rate Generator Control]$
 571   1      
 572   1              // $[SMOD1 - UART1 Mode]
 573   1              // [SMOD1 - UART1 Mode]$
 574   1      
 575   1              // $[UART1FCN0 - UART1 FIFO Control 0]
 576   1              // [UART1FCN0 - UART1 FIFO Control 0]$
 577   1      
 578   1              // $[SBRLH1 - UART1 Baud Rate Generator High Byte]
 579   1              /***********************************************************************
 580   1               - UART1 Baud Rate Reload High = 0xFF
 581   1               ***********************************************************************/
 582   1              SBRLH1 = (0xFF << SBRLH1_BRH__SHIFT);
 583   1              // [SBRLH1 - UART1 Baud Rate Generator High Byte]$
 584   1      
 585   1              // $[SBRLL1 - UART1 Baud Rate Generator Low Byte]
 586   1              /***********************************************************************
 587   1               - UART1 Baud Rate Reload Low = 0x96
 588   1               ***********************************************************************/
 589   1              SBRLL1 = (0x96 << SBRLL1_BRL__SHIFT);
 590   1              // [SBRLL1 - UART1 Baud Rate Generator Low Byte]$
 591   1      
 592   1              // $[UART1LIN - UART1 LIN Configuration]
 593   1              // [UART1LIN - UART1 LIN Configuration]$
 594   1      
 595   1              // $[SCON1 - UART1 Serial Port Control]
 596   1              // [SCON1 - UART1 Serial Port Control]$
 597   1      
 598   1              // $[UART1FCN1 - UART1 FIFO Control 1]
 599   1              // [UART1FCN1 - UART1 FIFO Control 1]$
 600   1      
 601   1      }
 602          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    259    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   INITDEVICE                                                        11/16/2021 19:54:22 PAGE 11  


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
