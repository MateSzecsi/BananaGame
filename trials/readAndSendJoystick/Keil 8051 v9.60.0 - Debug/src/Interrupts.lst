C51 COMPILER V9.60.0.0   INTERRUPTS                                                        11/16/2021 19:54:23 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INTERRUPTS
OBJECT MODULE PLACED IN .\src\Interrupts.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\merge\S
                    -implicityStudio\v4_workspace\EFM8BB3_ADC_ExternalInput\src\Interrupts.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNING
                    -LEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\merge\SimplicityStudio\v4_workspac
                    -e\EFM8BB3_ADC_ExternalInput\inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//kits/common/drivers/efm8_
                    -retargetserial;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/shared/si8051Base;C:/SiliconLabs/Si
                    -mplicityStudio/v4/developer/sdks/8051/v4.1.7//Device/EFM8BB3/inc) PRINT(.\src\Interrupts.lst) COND PAGEWIDTH(120) PAGELE
                    -NGTH(65) OBJECT(.\src\Interrupts.OBJ)

line level    source

   1          //=========================================================
   2          // src/Interupts.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9                   
  10          // USER INCLUDES                        
  11          #include <SI_EFM8BB3_Register_Enums.h>
  12          #include "retargetserial.h"
  13          #include "../codeActuallyDoneByUs/joystickSendUART.h"
  14          
  15          //-----------------------------------------------------------------------------
  16          // ADC0EOC_ISR
  17          //-----------------------------------------------------------------------------
  18          //
  19          // ADC0EOC ISR Content goes here. Remember to clear flag bits:
  20          // ADC0CN0::ADINT (Conversion Complete Interrupt Flag)
  21          //
  22          // This ISR averages 2048 samples then prints the result to the terminal.  The
  23          // ISR is called after each ADC conversion which is triggered by Timer2.
  24          //
  25          //-----------------------------------------------------------------------------
  26          SI_INTERRUPT(ADC0EOC_ISR, ADC0EOC_IRQn)
  27          {
  28   1         static uint32_t accumulator = 0;     // Accumulator for averaging
  29   1         static uint16_t measurements = 2048; // Measurement counter
  30   1         uint32_t result = 0;
  31   1         uint32_t mV;                         // Measured voltage in mV
  32   1         uint8_t SFRPAGE_save;
  33   1      
  34   1      
  35   1         ADC0CN0_ADINT = 0;              // Clear ADC0 conv. complete flag
  36   1      
  37   1         accumulator += ADC0;
  38   1         measurements--;
  39   1      
  40   1         if(measurements == 0)
  41   1         {
  42   2                measurements = 2048;
  43   2                result = accumulator / 2048;
  44   2                accumulator = 0;
  45   2      
  46   2                // The 14-bit ADC value is averaged across 2048 measurements.
  47   2                // The measured voltage applied to P1.7 is then:
  48   2                //
  49   2                //                           Vref (mV)
  50   2                //   measurement (mV) =   --------------- * result (bits)
C51 COMPILER V9.60.0.0   INTERRUPTS                                                        11/16/2021 19:54:23 PAGE 2   

  51   2                //                       (2^12)-1 (bits)
  52   2      
  53   2                mV =  (result * 3300) / 4095;
  54   2      
  55   2                SFRPAGE_save = SFRPAGE;
  56   2                SFRPAGE = LEGACY_PAGE;
  57   2                RETARGET_PRINTF ("\nP1.7 voltage: %ld mV\n", mV);
  58   2                SFRPAGE = SFRPAGE_save;
  59   2      
  60   2                sendJoystickPosUART(mV);
  61   2         }
  62   1      }
  63          
  64          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    228    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
